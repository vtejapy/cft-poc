AWSTemplateFormatVersion: '2010-09-09'
Description: 'S3 buckets for various use cases'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, stg, prod]
    Description: Environment name

  Region:
    Type: String
    Default: us-east-1
    Description: AWS region for deployment

  Client:
    Type: String
    Default: gen-client5
    Description: Client name

  CostCenter:
    Type: String
    Default: '1003'
    Description: Cost center for billing tags

  BaseDomain:
    Type: String
    Default: genpactdemos.com
    Description: Base domain name

  RecTransExpiration:
    Type: Number
    Default: 2555
    Description: Recording transcripts expiration days

  RecTransITTransition:
    Type: Number
    Default: 90
    Description: Recording transcripts IT transition days

  RecTransGlacierTransition:
    Type: Number
    Default: 365
    Description: Recording transcripts Glacier transition days

  AbortIncomplete:
    Type: Number
    Default: 7
    Description: Abort incomplete multipart upload days

  ExpReportsExpiration:
    Type: Number
    Default: 180
    Description: Exported reports expiration days

  ScreenRecExpiration:
    Type: Number
    Default: 60
    Description: Screen recording expiration days

  VoicemailExpiration:
    Type: Number
    Default: 30
    Description: Voicemail expiration days

  LexBotExpiration:
    Type: Number
    Default: 180
    Description: Lex bot expiration days

  BucketLoggingExpiration:
    Type: Number
    Default: 180
    Description: Bucket logging expiration days

  VPCStackName:
    Type: String
    Description: Name of the VPC stack

Resources:
  # PRIMARY S3 BUCKET - Recordings and Transcripts
  RecordingsAndTranscriptsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'rec-trans-${Client}-${Region}-${Environment}'
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: recording-transcript
            Status: Enabled
            ExpirationInDays: !Ref RecTransExpiration
            Transitions:
              - TransitionInDays: !Ref RecTransITTransition
                StorageClass: INTELLIGENT_TIERING
              - TransitionInDays: !Ref RecTransGlacierTransition
                StorageClass: GLACIER
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: !Ref AbortIncomplete
      Tags:
        - Key: Name
          Value: !Sub 'rec-trans-${Client}-${Region}-${Environment}'
        - Key: environment
          Value: !Ref Environment
        - Key: costCenter
          Value: !Ref CostCenter
        - Key: appService
          Value: !Ref Client
        - Key: deployedBy
          Value: cloudformation

  # ====================
  # ADDITIONAL S3 BUCKETS (COMMENTED OUT)
  # ====================
  # Uncomment and configure these buckets as needed for your environment
  
  # # Exported Reports S3 Bucket
  # ExportedReportsBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'exp-reports-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: exported-reports
  #           Status: Enabled
  #           ExpirationInDays: !Ref ExpReportsExpiration
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'exp-reports-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Screen Recordings S3 Bucket
  # ScreenRecordingsBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'screen-rec-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: screen-recordings
  #           Status: Enabled
  #           ExpirationInDays: !Ref ScreenRecExpiration
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'screen-rec-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Voice Mail S3 Bucket
  # VoiceMailBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'voicemail-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: voice_mail
  #           Status: Enabled
  #           ExpirationInDays: !Ref VoicemailExpiration
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'voicemail-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Command Center S3 Bucket
  # CommandCenterBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'command-center-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: ccenter
  #           Status: Enabled
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'command-center-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Lex Bot Grammar S3 Bucket
  # LexBotGrammarBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'lex-bot-grammar-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: lex-bot-grammer
  #           Status: Enabled
  #           ExpirationInDays: !Ref LexBotExpiration
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     PublicAccessBlockConfiguration:
  #       BlockPublicAcls: true
  #       BlockPublicPolicy: true
  #       IgnorePublicAcls: true
  #       RestrictPublicBuckets: true
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'lex-bot-grammar-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Bucket Logging S3 Bucket
  # BucketLoggingBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'bucket-logging-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: bucket-logging
  #           Status: Enabled
  #           ExpirationInDays: !Ref BucketLoggingExpiration
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'bucket-logging-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Contact Evaluation S3 Bucket
  # ContactEvaluationBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub 'contact-evaluation-${Client}-${Region}-${Environment}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: contact-evaluation
  #           Status: Enabled
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     Tags:
  #       - Key: Name
  #         Value: !Sub 'contact-evaluation-${Client}-${Region}-${Environment}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # CC Admin Tool S3 Bucket
  # CCAdminToolBucket:
  #   Type: AWS::S3::Bucket
  #   Properties:
  #     BucketName: !Sub '${Client}-cc-admin-tool.${BaseDomain}'
  #     VersioningConfiguration:
  #       Status: Enabled
  #     LifecycleConfiguration:
  #       Rules:
  #         - Id: cc-admin-tool
  #           Status: Enabled
  #           AbortIncompleteMultipartUpload:
  #             DaysAfterInitiation: !Ref AbortIncomplete
  #     WebsiteConfiguration:
  #       IndexDocument: index.html
  #       ErrorDocument: error.html
  #     Tags:
  #       - Key: Name
  #         Value: !Sub '${Client}-cc-admin-tool.${BaseDomain}'
  #       - Key: environment
  #         Value: !Ref Environment
  #       - Key: costCenter
  #         Value: !Ref CostCenter
  #       - Key: appService
  #         Value: !Ref Client
  #       - Key: deployedBy
  #         Value: cloudformation
  
  # # Bucket Policy for CC Admin Tool
  # CCAdminToolBucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref CCAdminToolBucket
  #     PolicyDocument:
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Principal: '*'
  #           Action:
  #             - s3:PutObject
  #             - s3:GetObject
  #             - s3:ListBucket
  #           Resource:
  #             - !Sub '${CCAdminToolBucket}/*'
  #             - !GetAtt CCAdminToolBucket.Arn
  #           Condition:
  #             StringEquals:
  #               'aws:SourceVpce': 
  #                 Fn::ImportValue: !Sub '${VPCStackName}-S3VPCEndpoint-ID'

Outputs:
  RecordingsAndTranscriptsBucketName:
    Description: Recordings and Transcripts S3 Bucket Name
    Value: !Ref RecordingsAndTranscriptsBucket
    Export:
      Name: !Sub '${AWS::StackName}-RecordingsAndTranscriptsBucket'

  # ====================
  # ADDITIONAL BUCKET OUTPUTS (COMMENTED OUT)
  # ====================
  # Uncomment these outputs when you enable the corresponding buckets above
  
  # ExportedReportsBucketName:
  #   Description: Exported Reports S3 Bucket Name
  #   Value: !Ref ExportedReportsBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-ExportedReportsBucket'
  
  # ScreenRecordingsBucketName:
  #   Description: Screen Recordings S3 Bucket Name
  #   Value: !Ref ScreenRecordingsBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-ScreenRecordingsBucket'
  
  # VoiceMailBucketName:
  #   Description: Voice Mail S3 Bucket Name
  #   Value: !Ref VoiceMailBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-VoiceMailBucket'
  
  # CommandCenterBucketName:
  #   Description: Command Center S3 Bucket Name
  #   Value: !Ref CommandCenterBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-CommandCenterBucket'
  
  # LexBotGrammarBucketName:
  #   Description: Lex Bot Grammar S3 Bucket Name
  #   Value: !Ref LexBotGrammarBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-LexBotGrammarBucket'
  
  # BucketLoggingBucketName:
  #   Description: Bucket Logging S3 Bucket Name
  #   Value: !Ref BucketLoggingBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-BucketLoggingBucket'
  
  # ContactEvaluationBucketName:
  #   Description: Contact Evaluation S3 Bucket Name
  #   Value: !Ref ContactEvaluationBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-ContactEvaluationBucket'
  
  # CCAdminToolBucketName:
  #   Description: CC Admin Tool S3 Bucket Name
  #   Value: !Ref CCAdminToolBucket
  #   Export:
  #     Name: !Sub '${AWS::StackName}-CCAdminToolBucket'