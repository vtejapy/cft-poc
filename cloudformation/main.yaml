AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master CloudFormation template for deploying all infrastructure stacks'

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, stg, prod]
    Description: Environment name

  Region:
    Type: String
    Default: us-east-1
    Description: AWS region for deployment

  VpcCidr:
    Type: String
    Default: 10.113.0.0/16
    Description: CIDR block for the VPC

  Client:
    Type: String
    Default: gen-client5
    Description: Client name

  VpcName:
    Type: String
    Default: genpact-ccm
    Description: Name tag for the VPC

  PrivateCidrOffset:
    Type: Number
    Default: 10
    Description: Starting offset for private subnet CIDR blocks

  PublicCidrOffset:
    Type: Number
    Default: 20
    Description: Starting offset for public subnet CIDR blocks

  CostCenter:
    Type: String
    Default: '1003'
    Description: Cost center for billing tags

  CompanyName:
    Type: String
    Default: genpact
    Description: Company name for tagging

  BaseDomain:
    Type: String
    Default: genpactdemos.com
    Description: Base domain name

  ACMCertArn:
    Type: String
    Default: 5e44efe1-86d0-4bcd-b259-41ce929556c8
    Description: ACM certificate ARN

  # S3 Lifecycle Parameters
  RecTransExpiration:
    Type: Number
    Default: 2555
    Description: Recording transcripts expiration days

  RecTransITTransition:
    Type: Number
    Default: 90
    Description: Recording transcripts IT transition days

  RecTransGlacierTransition:
    Type: Number
    Default: 365
    Description: Recording transcripts Glacier transition days

  AbortIncomplete:
    Type: Number
    Default: 7
    Description: Abort incomplete multipart upload days

  ExpReportsExpiration:
    Type: Number
    Default: 180
    Description: Exported reports expiration days

  ScreenRecExpiration:
    Type: Number
    Default: 60
    Description: Screen recording expiration days

  VoicemailExpiration:
    Type: Number
    Default: 30
    Description: Voicemail expiration days

  LexBotExpiration:
    Type: Number
    Default: 180
    Description: Lex bot expiration days

  BucketLoggingExpiration:
    Type: Number
    Default: 180
    Description: Bucket logging expiration days

  TemplatesBucketName:
    Type: String
    Description: S3 bucket containing CloudFormation templates
    Default: cloudformation-templates-bucket

  TemplatesPrefix:
    Type: String
    Description: S3 prefix for CloudFormation templates
    Default: templates/

  # Database Parameters
  DatabaseEndpoint:
    Type: String
    Description: RDS Database Endpoint
    Default: placeholder-endpoint

  DatabasePort:
    Type: Number
    Default: 5432
    Description: Database port

  DatabaseName:
    Type: String
    Default: postgres
    Description: Database name

  SchemaName:
    Type: String
    Default: agent_desktop_assist
    Description: Database schema name

  SecretManagerName:
    Type: String
    Description: RDS Secret Manager Name
    Default: placeholder-secret

  # Connect Instance
  ConnectInstanceId:
    Type: String
    Description: Amazon Connect Instance ID
    Default: placeholder-instance

  # DynamoDB
  DynamoDBTableName:
    Type: String
    Description: DynamoDB table name for queue experience
    Default: queue-experience-db

  # Contact Flow
  ContactFlowId:
    Type: String
    Description: Connect contact flow ID
    Default: placeholder-flow

  # API Gateway
  ApiGatewayId:
    Type: String
    Description: API Gateway REST API ID
    Default: placeholder-api

  ApiGatewayStageUrl:
    Type: String
    Description: API Gateway stage invoke URL
    Default: https://api.example.com/dev

Conditions:
  IsProdEnvironment: !Equals [!Ref Environment, prod]

Resources:
  # VPC Stack
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}vpc.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        VpcCidr: !Ref VpcCidr
        Client: !Ref Client
        CostCenter: !Ref CostCenter
      Tags:
        - Key: StackType
          Value: VPC
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # S3 Stack
  S3Stack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}s3.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        BaseDomain: !Ref BaseDomain
        RecTransExpiration: !Ref RecTransExpiration
        RecTransITTransition: !Ref RecTransITTransition
        RecTransGlacierTransition: !Ref RecTransGlacierTransition
        AbortIncomplete: !Ref AbortIncomplete
        ExpReportsExpiration: !Ref ExpReportsExpiration
        ScreenRecExpiration: !Ref ScreenRecExpiration
        VoicemailExpiration: !Ref VoicemailExpiration
        LexBotExpiration: !Ref LexBotExpiration
        BucketLoggingExpiration: !Ref BucketLoggingExpiration
        VPCStackName: !Ref VPCStack
      Tags:
        - Key: StackType
          Value: S3
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # IAM Stack
  IAMStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}iam.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        ConnectInstanceArn: !Sub 'arn:aws:connect:${Region}:${AWS::AccountId}:instance/${ConnectInstanceId}'
        DatabaseSecretArn: !Sub 'arn:aws:secretsmanager:${Region}:${AWS::AccountId}:secret:${SecretManagerName}'
      Tags:
        - Key: StackType
          Value: IAM
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # Kinesis Stack
  KinesisStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3Stack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}kinesis.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        ShardCount: 1
        RetentionPeriod: 24
        S3StackName: !Ref S3Stack
      Tags:
        - Key: StackType
          Value: Kinesis
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # DynamoDB Stack
  DynamoDBStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}dynamodb.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
      Tags:
        - Key: StackType
          Value: DynamoDB
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # VPC Endpoints Stack
  VPCEndpointsStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}vpc_endpoints.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        VPCStackName: !Ref VPCStack
      Tags:
        - Key: StackType
          Value: VPCEndpoints
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # Lambda Stack
  LambdaStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - IAMStack
      - KinesisStack
      - DynamoDBStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}lambda.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        LambdaMemorySize: 128
        LambdaTimeout: 30
        LambdaRuntime: python3.10
        VPCStackName: !Ref VPCStack
        IAMStackName: !Ref IAMStack
        ConnectInstanceId: !Ref ConnectInstanceId
        DatabaseEndpoint: !Ref DatabaseEndpoint
        DatabasePort: !Ref DatabasePort
        DatabaseName: !Ref DatabaseName
        SchemaName: !Ref SchemaName
        SecretManagerName: !Ref SecretManagerName
        S3BucketVoiceMail: !GetAtt S3Stack.Outputs.VoiceMailBucketName
        S3BucketExportedReports: !GetAtt S3Stack.Outputs.ExportedReportsBucketName
        S3BucketRecordings: !GetAtt S3Stack.Outputs.RecordingsAndTranscriptsBucketName
        S3BucketScreenRecordings: !GetAtt S3Stack.Outputs.ScreenRecordingsBucketName
        S3BucketCCenter: !GetAtt S3Stack.Outputs.CCenterBucketName
        DynamoDBTableName: !GetAtt DynamoDBStack.Outputs.QueueExperienceTableName
        ContactFlowId: !Ref ContactFlowId
        ApiGatewayId: !Ref ApiGatewayId
        ApiGatewayStageUrl: !Ref ApiGatewayStageUrl
        KinesisStackName: !Ref KinesisStack
        SMTPFromAddress: gnwcc-dev@genworth.com
        SMTPHost: smtp.genworth.net
        SMTPPort: 587
        SMTPSecretName: SMTP
        SMTPUsername: smtp-user
      Tags:
        - Key: StackType
          Value: Lambda
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # API Gateway Stack
  APIGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: 
      - VPCEndpointsStack
      - LambdaStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}api_gateway.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        VPCStackName: !Ref VPCStack
        VPCEndpointsStackName: !Ref VPCEndpointsStack
        LambdaStackName: !Ref LambdaStack
      Tags:
        - Key: StackType
          Value: APIGateway
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # RDS Stack
  RDSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: VPCStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}rds.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        VPCStackName: !Ref VPCStack
        RDSEngineVersion: '16.4'
        RDSInstanceClass: !If [IsProdEnvironment, 'db.t3.medium', 'db.t3.micro']
        RDSStorageType: gp3
        RDSAllocatedStorage: !If [IsProdEnvironment, 100, 20]
        RDSMaintenanceWindow: 'sun:05:00-sun:06:00'
        RDSBackupRetentionPeriod: !If [IsProdEnvironment, 14, 7]
        DBName: !Ref DatabaseName
        RDSUsername: postgres
        RDSParameterGroupName: postgres-parameter-group
      Tags:
        - Key: StackType
          Value: RDS
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # Connect Stack
  ConnectStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: S3Stack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}connect.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        ConnectInstanceAlias: genpact-poc
        ConnectIdentityManagementType: CONNECT_MANAGED
        S3StackName: !Ref S3Stack
      Tags:
        - Key: StackType
          Value: Connect
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

  # EventBridge Stack
  EventBridgeStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: LambdaStack
    Properties:
      TemplateURL: !Sub 'https://${TemplatesBucketName}.s3.amazonaws.com/${TemplatesPrefix}event_bridge.yaml'
      Parameters:
        Environment: !Ref Environment
        Region: !Ref Region
        Client: !Ref Client
        CostCenter: !Ref CostCenter
        LambdaStackName: !Ref LambdaStack
      Tags:
        - Key: StackType
          Value: EventBridge
        - Key: Environment
          Value: !Ref Environment
        - Key: Client
          Value: !Ref Client
        - Key: DeployedBy
          Value: cloudformation

Outputs:
  VPCStackId:
    Description: VPC Stack ID
    Value: !Ref VPCStack
    Export:
      Name: !Sub '${AWS::StackName}-VPCStack-ID'

  S3StackId:
    Description: S3 Stack ID
    Value: !Ref S3Stack
    Export:
      Name: !Sub '${AWS::StackName}-S3Stack-ID'

  IAMStackId:
    Description: IAM Stack ID
    Value: !Ref IAMStack
    Export:
      Name: !Sub '${AWS::StackName}-IAMStack-ID'

  KinesisStackId:
    Description: Kinesis Stack ID
    Value: !Ref KinesisStack
    Export:
      Name: !Sub '${AWS::StackName}-KinesisStack-ID'

  LambdaStackId:
    Description: Lambda Stack ID
    Value: !Ref LambdaStack
    Export:
      Name: !Sub '${AWS::StackName}-LambdaStack-ID'

  DynamoDBStackId:
    Description: DynamoDB Stack ID
    Value: !Ref DynamoDBStack
    Export:
      Name: !Sub '${AWS::StackName}-DynamoDBStack-ID'

  VPCEndpointsStackId:
    Description: VPC Endpoints Stack ID
    Value: !Ref VPCEndpointsStack
    Export:
      Name: !Sub '${AWS::StackName}-VPCEndpointsStack-ID'

  APIGatewayStackId:
    Description: API Gateway Stack ID
    Value: !Ref APIGatewayStack
    Export:
      Name: !Sub '${AWS::StackName}-APIGatewayStack-ID'

  EventBridgeStackId:
    Description: EventBridge Stack ID
    Value: !Ref EventBridgeStack
    Export:
      Name: !Sub '${AWS::StackName}-EventBridgeStack-ID'

  RDSStackId:
    Description: RDS Stack ID
    Value: !Ref RDSStack
    Export:
      Name: !Sub '${AWS::StackName}-RDSStack-ID'

  ConnectStackId:
    Description: Connect Stack ID
    Value: !Ref ConnectStack
    Export:
      Name: !Sub '${AWS::StackName}-ConnectStack-ID'

  VPCId:
    Description: VPC ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.VPCId
    Export:
      Name: !Sub '${AWS::StackName}-VPC-ID'

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet1Id
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1-ID'

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet2Id
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2-ID'

  PrivateSubnet3Id:
    Description: Private Subnet 3 ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.PrivateSubnet3Id
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet3-ID'

  PublicSubnet1Id:
    Description: Public Subnet 1 ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.PublicSubnet1Id
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1-ID'

  PublicSubnet2Id:
    Description: Public Subnet 2 ID from VPC Stack
    Value: !GetAtt VPCStack.Outputs.PublicSubnet2Id
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2-ID'